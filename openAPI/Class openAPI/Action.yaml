openapi: 3.0.1
info:
  title: Action API
  description: |
    The Action API facilitates the management of Action and Paraphrase entities within a script management system. This API enables the creation, retrieval, updating, and deletion of actions, as well as their paraphrased versions, thus serving as the backbone for organizing scripts by allowing users to manipulate action entities and their various expressive forms.

    **Dockerized Environment**:
    - **Nginx**: An Nginx proxy container handles SSL termination with Let's Encrypt certificates via Certbot.
    - **Vapor Application**: A Swift-based Vapor app runs in a separate Docker container.
    - **Postgres Database**: The main persistence layer is a PostgreSQL container managed by Docker Compose.
    - **Redis Cache**: A Redis container is used for caching action data, optimizing performance for frequent queries.
    - **RedisAI Middleware**: RedisAI is employed for enhanced recommendations and decision-making based on predefined models.

  version: "1.1"
servers:
  - url: https://action.fountain.coach
    description: Production server for the Action API (behind Nginx proxy)
  - url: http://localhost:8080
    description: Development server for the Action API (Docker environment)

paths:
  /actions:
    get:
      summary: Retrieve All Actions
      operationId: listActions
      tags:
        - Actions
      description: |
        Lists all actions currently stored within the system. This endpoint leverages Redis caching for optimized query performance.
      responses:
        '200':
          description: A JSON array of action entities.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Action'
              examples:
                actionsExample:
                  summary: Example of an actions list
                  value:
                    - actionId: 1
                      description: "Character enters the room."
                      sequence: 1
                    - actionId: 2
                      description: "Character picks up a book."
                      sequence: 2
        '401':
          description: Unauthorized - Invalid or missing authentication token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                unauthorizedExample:
                  summary: Unauthorized request example
                  value:
                    code: 401
                    message: "Unauthorized - Authentication token is missing or invalid."
        '500':
          description: Internal Server Error - Error fetching data from the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerErrorExample:
                  summary: Internal server error example
                  value:
                    code: 500
                    message: "Internal Server Error - Unable to retrieve actions."
    post:
      summary: Create a New Action
      operationId: createAction
      tags:
        - Actions
      description: |
        Allows for the creation of a new action entity. Clients must provide an action description and its sequence within a script. This endpoint integrates with RedisAI to provide recommendations or validations based on predefined models.
      requestBody:
        required: true
        description: A JSON object containing the new action's details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
            examples:
              createActionExample:
                summary: Example of creating an action
                value:
                  description: "Character shouts for help."
                  sequence: 3
      responses:
        '201':
          description: The action has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
              examples:
                createActionResponseExample:
                  summary: Successful action creation example
                  value:
                    actionId: 3
                    description: "Character shouts for help."
                    sequence: 3
        '400':
          description: Bad Request - Missing or invalid data in the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequestExample:
                  summary: Bad request example
                  value:
                    code: 400
                    message: "Bad Request - Data format is incorrect or missing fields."
        '401':
          description: Unauthorized - Invalid or missing authentication token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                unauthorizedExample:
                  summary: Unauthorized request example
                  value:
                    code: 401
                    message: "Unauthorized - Authentication token is missing or invalid."
        '500':
          description: Internal Server Error - Error creating the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerErrorExample:
                  summary: Internal server error example
                  value:
                    code: 500
                    message: "Internal Server Error - Unable to create the action."

  /actions/{actionId}/paraphrases:
    get:
      summary: Retrieve All Paraphrases for an Action
      operationId: listActionParaphrases
      tags:
        - Actions
        - Paraphrases
      description: |
        Retrieves all paraphrases linked to a specific action. This includes commentary on why each paraphrase is connected to the original action.
        Leverages Redis caching for improved query performance.
      parameters:
        - name: actionId
          in: path
          required: true
          description: The unique identifier of the action whose paraphrases are to be retrieved.
          schema:
            type: integer
      responses:
        '200':
          description: A JSON array of paraphrases for the specified action.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Paraphrase'
              examples:
                paraphrasesExample:
                  summary: Example list of paraphrases
                  value:
                    - paraphraseId: 1
                      originalId: 1
                      text: "Character enters the stage."
                      commentary: "Rephrased to fit a theatrical context."
                    - paraphraseId: 2
                      originalId: 1
                      text: "Character steps into the scene."
                      commentary: "Adjusted for a screenplay format."
        '404':
          description: Not Found - The specified action does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFoundExample:
                  summary: Not found example
                  value:
                    code: 404
                    message: "Not Found - The action specified does not exist."
        '401':
          description: Unauthorized - Invalid or missing authentication token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                unauthorizedExample:
                  summary: Unauthorized request example
                  value:
                    code: 401
                    message: "Unauthorized - Authentication token is missing or invalid."
        '500':
          description: Internal Server Error - Error fetching paraphrases from the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerErrorExample:
                  summary: Internal server error example
                  value:
                    code: 500
                    message: "Internal Server Error - Unable to retrieve paraphrases."
    post:
      summary: Create a New Paraphrase for an Action
      operationId: createActionParaphrase
      tags:
        - Actions
        - Paraphrases
      description: |
        Allows for the creation of a new paraphrase linked to an action. Clients must provide the paraphrased text and a commentary explaining the link to the original action. RedisAI integration provides additional validation.
      parameters:
        - name: actionId
          in: path
          required: true
          description: The unique identifier of the action to which the paraphrase will be linked.
          schema:
            type: integer
      requestBody:
        required: true
        description: A JSON object containing the new paraphrase's details and its link commentary.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paraphrase'
            examples:
              createParaphraseExample:
                summary: Example of creating a paraphrase
                value:
                  originalId: 1
                  text: "Character makes an entrance."
                  commentary: "Simplified for better understanding in educational scripts."
      responses:
        '201':
          description: The paraphrase has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paraphrase'
              examples:
                createParaphraseResponseExample:
                  summary: Successful paraphrase creation example
                  value:
                    paraphraseId: 3
                    originalId: 1
                    text: "Character makes an entrance."
                    commentary: "Simplified for better understanding in educational scripts."
        '400':
          description: Bad Request - Missing or invalid data in the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequestExample:
                  summary: Bad request example
                  value:
                    code: 400
                    message: "Bad Request - Data format is incorrect or missing fields."
        '404':
          description: Not Found - The specified action does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFoundExample:
                  summary: Not found example
                  value:
                    code: 404
                    message: "Not Found - The action specified does not exist."
        '401':
          description: Unauthorized - Invalid or missing authentication token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                unauthorizedExample:
                  summary: Unauthorized request example
                  value:
                    code: 401
                    message: "Unauthorized - Authentication token is missing or invalid."
        '500':
          description: Internal Server Error - Error creating the paraphrase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerErrorExample:
                  summary: Internal server error example
                  value:
                    code: 500
                    message: "Internal Server Error - Unable to create the paraphrase."

components:
  schemas:
    Action:
      type: object
      description: |
        Represents a single action within a script, detailing what happens at this step and its order relative to other actions. Caching via Redis optimizes retrieval.
      required:
        - description
        - sequence
      properties:
        actionId:
          type: integer
          format: int64
          description: The unique identifier for the Action, automatically generated upon creation.
        description:
          type: string
          description: A textual description outlining what happens in this action.
        sequence:
          type: integer
          format: int32
          description: The numerical order of the action within its script, used to organize actions sequentially.
        paraphrases:
          type: array
          items:
            $ref: '#/components/schemas/Paraphrase'
    Paraphrase:
      type: object
      description: |
        Represents a paraphrased version of a script element (e.g., action), including textual paraphrase and commentary on the connection to the original. Redis caching improves retrieval times.
      required:
        - originalId
        - text
        - commentary
      properties:
        paraphraseId:
          type: integer
          format: int64
          description: The unique identifier for the Paraphrase, automatically generated upon creation.
        originalId:
          type: integer
          description: The ID of the original action to which this paraphrase is linked.
        text:
          type: string
          description: The paraphrased text of the original action.
        commentary:
          type: string
          description: An explanatory note on why the paraphrase is linked to the original action.
    Error:
      type: object
      description: Error response structure.
      properties:
        code:
          type: integer
          format: int32
          description: Error code representing the type of error.
        message:
          type: string
          description: Description of the error encountered.

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []
